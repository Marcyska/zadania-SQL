drop database if existis computer_store;
create database computer_store;

CREATE TABLE manufacturers (
	id SERIAL PRIMARY KEY,
	name TEXT NOT NULL
	);

CREATE TABLE products (
	id SERIAL PRIMARY KEY,
	name TEXT NOT NULL,
	price REAL NOT NULL,
	manufacturer_id INTEGER NOT NULL,
	FOREIGN KEY (manufacturer_id) REFERENCES manufacturers(id)
	);

INSERT INTO manufacturers (name) VALUES ('Sony');
INSERT INTO manufacturers (name) VALUES ('Creative Labs');
INSERT INTO manufacturers (name) VALUES ('Hewlett-Packard');
INSERT INTO manufacturers (name) VALUES ('Iomega');
INSERT INTO manufacturers (name) VALUES ('Fujitsu');
INSERT INTO manufacturers (name) VALUES ('Winchester');
INSERT INTO manufacturers (name) VALUES ('Apple');
INSERT INTO products (name, price, manufacturer_id) VALUES ('Hard drive', 240, 5);
INSERT INTO products (name, price, manufacturer_id) VALUES ('Memory', 120, 6);
INSERT INTO products (name, price, manufacturer_id) VALUES ('ZIP drive', 150, 4);
INSERT INTO products (name, price, manufacturer_id) VALUES ('Floppy disk', 5, 6);
INSERT INTO products (name, price, manufacturer_id) VALUES ('Monitor', 240, 1);
INSERT INTO products (name, price, manufacturer_id) VALUES ('DVD drive', 180, 2);
INSERT INTO products (name, price, manufacturer_id) VALUES ('CD drive', 90, 2);
INSERT INTO products (name, price, manufacturer_id) VALUES ('Printer', 270, 3);
INSERT INTO products (name, price, manufacturer_id) VALUES ('Toner cartridge', 66, 3);
INSERT INTO products (name, price, manufacturer_id) VALUES ('DVD burner', 180, 2);


1. select name from products;

2. select name, price from products;

3. select name, price from products where price <= 200;

4. select * from products where price <= 120 and price >= 60;

5. update products set price = price * 100;

6. select avg(price) from products;

7. select avg(price) from products where manufacturer_id = 2;

8. select count(*) from products where price >= 180;

9. select name, price from products where price >= 180 order by name, price desc;

10. select * from products inner join manufacturers on manufacturers.id = products.manufacturer_id;

11. select products.name, products.price, manufacturers.name from products inner join manufacturers on manufacturers.id = products.manufacturer_id;

12. select manufacturer_id, avg(price) from products group by manufacturer_id;

13. select manufacturers.name, avg(price) from manufacturers join products on manufacturers.id = manufacturer_id group by manufacturers.name;

14. select manufacturers.name, avg(price) from manufacturers right join products on manufacturers.id = manufacturer_id group by manufacturers.name having avg(price) >= 150;

15. select name, price from products order by price LIMIT 1;

16. select manufacturers.name, max(price) from manufacturers join products on manufacturers.id = manufacturer_id group by manufacturers.name;

17. select manufacturers.name from manufacturers join products on manufacturers.id = manufacturer_id group by manufacturers.name where manufacturers.name is null;

18. insert into products (name, price, manufacturer_id) values ('Loudspeakers', 70, 2);

19. update products set name = 'Laser printer' where id = 8;

20. update products set price = price - (price / 100 * 10);

21. update products set price = price - (price / 100 * 10) where price >= 120; 